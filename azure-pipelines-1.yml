# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c8803800-8dfb-4543-8741-e70d4d17c4e5'
  imageRepository: 'sondessssmyprojectpaa'
  containerRegistry: 'containerregisterydevops.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)/s/kubernetes'
              artifact: 'manifests'
              publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
   acrsecret: k8sexamplesacrauth
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    - task: KubernetesManifest@0
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'dev-ns-k8s-aks-svc-conn'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecter)'
        dockerRegistryEndpoint: 'ACR CONNECTION'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'dev-ns-k8s-aks-svc-conn'
        namespace: 'default'
        manifests: 
         $(Pipeline.Workspace)/manifests/deployment.yml
         $(Pipeline.Workspace)/manifests/service.yml
          
